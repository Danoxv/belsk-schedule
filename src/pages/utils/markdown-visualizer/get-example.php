<?php
declare(strict_types=1);

echo <<<_MD
# GitHub-Flavored Markdown

## Краткое руководство

Почитать подробнее про Markdown можно тут:
* [Github](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax) (eng)
* [HTML Academy](https://htmlacademy.ru/blog/boost/frontend/markdown) 
* [Github gist](https://gist.github.com/Jekins/2bf2d0638163f1294637)
* [wilsonmar.github.io](https://wilsonmar.github.io/markdown-text-for-github-from-html/) (eng)
* [AX.DIGITAL](https://ax.digital/markdown/)
* [Hexlet Guides](https://guides.hexlet.io/markdown/)

**Markdown — язык разметки текстов. Такие тексты легко писать и читать. Их можно без труда сконвертировать в HTML. Большинство программистов предпочитают Markdown для написания документации, описаний своих проектов, написания блогов и так далее.**

## Что это значит?

«Язык разметки» — это просто набор соглашений, правил.

Допустим, что вы общаетесь с другом по СМС. В них нельзя сделать текст жирным или наклонным. Вы договариваетесь с другом: если я пишу `*что-то*` вот так между звездочками, то считай, что это наклонный текст. А если я пишу `**что-то**` между двумя звездочками, то считай, что это жирный текст. Вы придумали *правила*.

Markdown — это набор подобных правил.

Правила понятны разным программам и сайтам. Например, «Вопросы и ответы» в уроках на Хекслете поддерживают Markdown. Это значит, что вы можете писать туда тексты по правилам Markdown, а после нажатия «Отправить» разметка станет реальной: текст в одинарных звездочках станет наклонным, текст в двойных звездочках станет жирным и так далее. Это конвертация из Markdown в HTML.

## Зачем это нужно?

1. Для добавления разметки туда, где невозможна реальная разметка. Например, в простом текстовом файле или в тех же СМС, где невозможно выделение жирным, создание заголовков, выделение цитат и пр.
2. Для более удобного написания текстов для последующей конвертации в HTML или другие форматы.

## Синтаксис Markdown

Это краткий справочник основных элементов синтаксиса Markdown. Единого стандарта не существует и разные версии Markdown могут отличаться в деталях. Но базовые элементы из списка ниже поддерживаются во всех стандартах.

### Абзацы (параграфы)

Абзацы создаются при помощи пустой строки. Если вокруг текста сверху и снизу есть пустые строки, то текст превращается в абзац.

Чтобы сделать перенос строки вместо абзаца,  нужно поставить два пробела в конце предыдущей строки.

### Выделение текста

```markdown
*Этот текст будет наклонным (курсив)*
_Этот текст будет наклонным (курсив)_

**Этот текст будет жирным**
__Этот текст будет жирным__

_Можно **вставлять** один тип в другой_
```

### Заголовки

```
# Это самый крупный заголовок, он превращается в тег h1
## h2
### h3
#### h4
##### h5
###### h6
```

### Ссылки

```markdown
https://hexlet.io — текст простой ссылки станет кликабельной ссылкой автоматически
```

Ссылкой можно сделать любой текст:

```markdown
[Это ссылка на Хекслет](https://hexlet.io)
```

### Цитата

```markdown
> Это мудрая цитата
> Мудрого человека.
```

### Картинки

```markdown
![Это опциональный alt-текст](/assets/images/markdown/markdown.png)
```

* Картинка без `alt` текста

![](//placehold.it/150x100)

* Картинка с альтом и тайтлом:

![Alt text](//placehold.it/150x100 "Можно задать title")

Запомнить просто: синтаксис как у ссылок, только перед открывающей квадратной скобкой ставится восклицательный знак.

* Картинки «сноски»:

![Картинка][image1]
![Картинка][image2]
![Картинка][image3]

[image1]: //placehold.it/250x100
[image2]: //placehold.it/200x100
[image3]: //placehold.it/150x100

* Картинки-ссылки:

[![Alt text](//placehold.it/150x100)](http://example.com/)

### Код

Для выделения кода (или любого неотформатированного текста) используются специальные символы — обратные тики: `` ` ``

```
Иногда нужно добавить кусок кода `function(12);` в обычную строчку текста.
```

<pre><code>А иногда нужно вставить целый блок кода:

&#96;&#96;&#96;javascript
const func = (num) => {
  if (num > 0) {
    return num - 1;
  }
  return num + 1;
};
&#96;&#96;&#96;
</code></pre>

### Списки

Непронумерованный список:

```markdown
* Пункт
* Еще один пункт
  * Подпункт
  * Еще один подпункт
```

Пронумерованный список:

```markdown
1. Пункт
1. Еще один пункт
  1. Подпункт
  1. Еще один подпункт
```

В пронумерованном списке можно использовать любые числа — это не важно. При конвертации в HTML или другой формат числа станут правильными и последовательными (1, 2, 3 и т.д.).

## Дополнительно про Markdown

1. [Markdown в Википедии](https://en.wikipedia.org/wiki/Markdown)
2. [10-минутный интерактивный туториал](https://commonmark.org/help/tutorial/)

---

*Автор: Рахим Давлеткалиев*

### Таблицы

В чистом Маркдауне нет синтаксиса для таблиц, а в GFM есть.

First Header  | Second Header
------------- | -------------
Content Cell  | Content Cell
Content Cell  | Content Cell

Для красоты можно и по бокам линии нарисовать:

| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |

Можно управлять выравниванием столбцов при помощи двоеточия.

| Left-Aligned  | Center Aligned  | Right Aligned |
|:------------- |:---------------:| -------------:|
| col 3 is      | some wordy text |     **\$1600** |
| col 2 is      | centered        |         \$12   |
| zebra stripes | are neat        |        ~~\$1~~ |

Внутри таблиц можно использовать ссылки, наклонный, жирный или зачеркнутый текст.
_MD;

die(0);